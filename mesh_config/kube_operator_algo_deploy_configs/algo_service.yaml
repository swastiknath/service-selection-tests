# Custom Resource Definitions for all three algorithms
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: fuzzyselectors.microservice-selector.io
spec:
  group: microservice-selector.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                serviceName:
                  type: string
                preferences:
                  type: object
                  properties:
                    performanceWeight:
                      type: number
                      default: 0.3
                    reliabilityWeight:
                      type: number
                      default: 0.25
                    availabilityWeight:
                      type: number
                      default: 0.2
                    efficiencyWeight:
                      type: number
                      default: 0.15
                    latencyWeight:
                      type: number
                      default: 0.1
                selectionInterval:
                  type: integer
                  default: 30
            status:
              type: object
              properties:
                selectedInstance:
                  type: string
                selectedEndpoint:
                  type: string
                selectionTime:
                  type: number
                algorithm:
                  type: string
      subresources:
        status: {}
  scope: Namespaced
  names:
    plural: fuzzyselectors
    singular: fuzzyselector
    kind: FuzzySelector

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: stochasticselectors.microservice-selector.io
spec:
  group: microservice-selector.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                serviceName:
                  type: string
                numInstances:
                  type: integer
                  default: 1
                qosRequirements:
                  type: object
                  properties:
                    maxResponseTime:
                      type: array
                      items:
                        type: number
                      default: [200, 50]
                    minThroughput:
                      type: array
                      items:
                        type: number
                      default: [100, 20]
                    minAvailability:
                      type: array
                      items:
                        type: number
                      default: [95, 2]
                    maxErrorRate:
                      type: array
                      items:
                        type: number
                      default: [5, 1]
                    weights:
                      type: object
                      additionalProperties:
                        type: number
                selectionInterval:
                  type: integer
                  default: 20
            status:
              type: object
              properties:
                selectedInstances:
                  type: array
                  items:
                    type: object
                selectionStats:
                  type: object
                algorithm:
                  type: string
                selectionTime:
                  type: number
      subresources:
        status: {}
  scope: Namespaced
  names:
    plural: stochasticselectors
    singular: stochasticselector
    kind: StochasticSelector

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: adaptiveselectors.microservice-selector.io
spec:
  group: microservice-selector.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                serviceName:
                  type: string
                requestContext:
                  type: object
                  properties:
                    requestType:
                      type: string
                      default: "api"
                    userLocation:
                      type: string
                      default: "unknown"
                    trafficLoad:
                      type: number
                      default: 0.5
                    networkConditions:
                      type: string
                      default: "good"
                    userPriority:
                      type: string
                      default: "medium"
                    sessionType:
                      type: string
                      default: "interactive"
                    dataSensitivity:
                      type: string
                      default: "internal"
                    geographicalZone:
                      type: string
                      default: "unknown"
                    deviceType:
                      type: string
                      default: "desktop"
                feedback:
                  type: object
                  properties:
                    performanceFeedback:
                      type: object
                      additionalProperties:
                        type: number
                selectionInterval:
                  type: integer
                  default: 25
            status:
              type: object
              properties:
                selectedInstance:
                  type: object
                contextAnalysis:
                  type: object
                adaptationStats:
                  type: object
                algorithm:
                  type: string
                selectionTime:
                  type: number
      subresources:
        status: {}
  scope: Namespaced
  names:
    plural: adaptiveselectors
    singular: adaptiveselector
    kind: AdaptiveSelector

---
# RBAC Configuration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: microservice-selector-operators
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: microservice-selector-operators
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["microservice-selector.io"]
    resources: ["fuzzyselectors", "stochasticselectors", "adaptiveselectors"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["microservice-selector.io"]
    resources:
      [
        "fuzzyselectors/status",
        "stochasticselectors/status",
        "adaptiveselectors/status",
      ]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: microservice-selector-operators
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: microservice-selector-operators
subjects:
  - kind: ServiceAccount
    name: microservice-selector-operators
    namespace: default

---
# Fuzzy Preference Relations Operator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fuzzy-operator
  namespace: default
  labels:
    app: fuzzy-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fuzzy-operator
  template:
    metadata:
      labels:
        app: fuzzy-operator
    spec:
      serviceAccountName: microservice-selector-operators
      containers:
        - name: fuzzy-operator
          image: microservice-selector/fuzzy-operator:latest
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: KOPF_LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Stochastic QoS Parameters Operator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stochastic-operator
  namespace: default
  labels:
    app: stochastic-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stochastic-operator
  template:
    metadata:
      labels:
        app: stochastic-operator
    spec:
      serviceAccountName: microservice-selector-operators
      containers:
        - name: stochastic-operator
          image: microservice-selector/stochastic-operator:latest
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: KOPF_LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Adaptive Context-Based Operator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adaptive-operator
  namespace: default
  labels:
    app: adaptive-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adaptive-operator
  template:
    metadata:
      labels:
        app: adaptive-operator
    spec:
      serviceAccountName: microservice-selector-operators
      containers:
        - name: adaptive-operator
          image: microservice-selector/adaptive-operator:latest
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: KOPF_LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
# ConfigMap for operator configurations
apiVersion: v1
kind: ConfigMap
metadata:
  name: microservice-selector-config
  namespace: default
data:
  fuzzy-config.yaml: |
    fuzzy_preferences:
      performance_weight: 0.30
      reliability_weight: 0.25
      availability_weight: 0.20
      efficiency_weight: 0.15
      latency_weight: 0.10

    fuzzy_rules:
      enable_adaptive_rules: true
      rule_confidence_threshold: 0.7

    metrics:
      collection_interval: 10
      history_size: 100

  stochastic-config.yaml: |
    stochastic_parameters:
      distribution_fitting_method: "normal"
      minimum_samples: 3
      confidence_level: 0.95
      
    qos_weights:
      response_time: 0.25
      throughput: 0.20
      availability: 0.20
      reliability: 0.15
      resource_efficiency: 0.10
      network_performance: 0.10

    selection:
      max_instances: 5
      selection_strategy: "weighted_probability"

  adaptive-config.yaml: |
    adaptation_parameters:
      learning_rate: 0.05
      weight_adjustment_threshold: 0.1
      context_similarity_threshold: 0.7
      
    ml_models:
      performance_predictor:
        type: "random_forest"
        n_estimators: 100
        max_depth: 10
      
      context_clusterer:
        type: "kmeans"
        n_clusters: 5

    context_features:
      temporal_features: ["time_of_day", "day_of_week"]
      geographical_features: ["user_location", "geographical_zone"]
      load_features: ["traffic_load", "network_conditions"]
      user_features: ["user_priority", "session_type", "device_type"]

---
# Services for the operators
apiVersion: v1
kind: Service
metadata:
  name: fuzzy-operator-service
  namespace: default
spec:
  selector:
    app: fuzzy-operator
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: stochastic-operator-service
  namespace: default
spec:
  selector:
    app: stochastic-operator
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: adaptive-operator-service
  namespace: default
spec:
  selector:
    app: adaptive-operator
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP
